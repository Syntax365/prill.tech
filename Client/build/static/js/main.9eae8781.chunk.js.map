{"version":3,"sources":["reportWebVitals.js","Components/Component1.jsx","Components/Button/Button.jsx","Pages/Homepage/HomePage.js","Pages/Testpage/Testpage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Component1","Component","Button","HomePage","props","state","testResponse","getTestData","fetch","response","json","data","setState","className","this","fullName","integrationTest","TestPage","id","App","path","exact","component","Homepage","Testpage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mDCKCQ,E,4JATb,WACE,OACE,8BACE,uE,GAJiBC,aCYVC,G,kKATb,WACE,OACE,iCACE,sE,GAJaD,cCmCNE,G,wDA/Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,IAGhB,EAAKC,cANY,E,+CASnB,WAAe,IAAD,OACZC,MAAM,SACHd,MAAK,SAACe,GAAD,OAAcA,EAASC,UAC5BhB,MAAK,SAACiB,GACL,EAAKC,SAAS,CACZN,aAAcK,S,oBAKtB,WACE,OACE,sBAAKE,UAAU,MAAf,UACE,6BAAKC,KAAKT,MAAMC,aAAaS,WAC7B,gDAAmBD,KAAKT,MAAMC,aAAaU,mBAC3C,cAAC,EAAD,IACA,cAAC,EAAD,W,GA1Bef,cC4BRgB,G,wDA5Bb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,IAGhB,EAAKC,cANY,E,+CASnB,WAAe,IAAD,OACZC,MAAM,SACHd,MAAK,SAACe,GAAD,OAAcA,EAASC,UAC5BhB,MAAK,SAACiB,GACL,EAAKC,SAAS,CACZN,aAAcK,S,oBAKtB,WACE,OACE,qBAAKO,GAAG,sBAAsBL,UAAS,MAAvC,wC,GAtBiBZ,cCcRkB,E,4JAbb,WACE,OACE,sBAAKD,GAAG,MAAR,sCAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,YAAYE,UAAWE,c,GAP3BvB,a,MCElBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtC,M","file":"static/js/main.9eae8781.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Component1 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>This is a Component1 component.</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component1;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button>\r\n        <div>This is a Buttons componentz.</div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Component1 from \"../../Components/Component1.jsx\";\r\nimport Button from \"../../Components/Button/Button.jsx\";\r\n\r\nimport \"./Homepage.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testResponse: {},\r\n    };\r\n\r\n    this.getTestData();\r\n  }\r\n\r\n  getTestData() {\r\n    fetch(\"/test\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          testResponse: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>{this.state.testResponse.fullName}</h1>\r\n        <p>Test Response: {this.state.testResponse.integrationTest}</p>\r\n        <Component1 />\r\n        <Button />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Component1 from \"../../Components/Component1.jsx\";\r\n\r\nimport \"./Testpage.css\";\r\n\r\nclass TestPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testResponse: {},\r\n    };\r\n\r\n    this.getTestData();\r\n  }\r\n\r\n  getTestData() {\r\n    fetch(\"/test\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          testResponse: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"test-page-container\" className={`App`}>\r\n        This is the test page.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestPage;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Homepage from \"./Pages/Homepage/HomePage.js\";\r\nimport Testpage from \"./Pages/Testpage/Testpage.js\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"App\">\r\n        This is the App Container\r\n        <Router>\r\n          <Route path=\"/\" exact component={Homepage} />\r\n          <Route path=\"/testpage\" component={Testpage} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}